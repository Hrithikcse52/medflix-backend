# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  TOKEN_KEY: ${{ secrets.TOKEN_KEY }}
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REPO_NAME: ${{secrets.REPO_NAME}}
  USERNAME: ${{secrets.USERNAME}}
  KEY: ${{secrets.KEY}}
  HOST: ${{secrets.HOST}}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Create .env files
        run: |
          echo "NODE_ENV=production" > .env 
          echo "PORT=5000" >> .env 
          echo "FRONTEND_URL=$FRONTEND_URL" >> .env 
          echo "MONGO_URI=$MONGO_URI" >> .env 
          echo "TOKEN_KEY=$TOKEN_KEY" >> .env
      # Runs a set of commands using the runners shell
      - name: Installing packages
        run: npm i
      - name: show files
        run : ls -la > /home/ubuntu/files.txt
      - name: copy files to remote server
        run: rsync --omit-dir-times -av -e 'ssh -i ${{ secrets.KEY }}' . $USERNAME@$HOST:/home/ubuntu/medflixBackend/
#       - name: Deploy
#         run: ssh -i $KEY $USERNAME@$HOST pm2 restart all
#       - name: Get current date # get the date of the build
#         id: date
#         run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"
#       - name: Build the Docker image # push The image to the docker hub
#         run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}
#       - name: docker login
#         run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
#       - name: Docker Push
#         run: docker push $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}
#       - name: executing remote ssh commands using password
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USERNAME }}
#           key: ${{ secrets.KEY }}
#           port: 22
#           script: sudo docker run -d --name backend -p 5000:5000 ${{ secrets.DOCKER_USER }}/${{ secrets.REPO_NAME }}:${{ steps.date.outputs.date }}
